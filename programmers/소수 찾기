'''
출처 : 프로그래머스

소수 찾기
문제 설명
한자리 숫자가 적힌 종이 조각이 흩어져있습니다. 흩어진 종이 조각을 붙여 소수를 몇 개 만들 수 있는지 알아내려 합니다.

각 종이 조각에 적힌 숫자가 적힌 문자열 numbers가 주어졌을 때, 종이 조각으로 만들 수 있는 소수가 몇 개인지 return 하도록 solution 함수를 완성해주세요.

제한사항
numbers는 길이 1 이상 7 이하인 문자열입니다.
numbers는 0~9까지 숫자만으로 이루어져 있습니다.
"013"은 0, 1, 3 숫자가 적힌 종이 조각이 흩어져있다는 의미입니다.
입출력 예
numbers	return
"17"	3
"011"	2
입출력 예 설명
예제 #1
[1, 7]으로는 소수 [7, 17, 71]를 만들 수 있습니다.

예제 #2
[0, 1, 1]으로는 소수 [11, 101]를 만들 수 있습니다.

11과 011은 같은 숫자로 취급합니다.
'''


#하나의 리스트에서 모든 조합 계산
#combinations는 순방향 조합만 가능 (ex->71 혹은 101불가)
from itertools import permutations
#소수 판별
def isPrime(a):
    if a < 2:
        return False
    else:
        for i in range(2,a):
            if a%i == 0:
                return False
        return True

def solution(numbers):
    answer = 0
    numbers_list = list(numbers)
    temp_list = []
    for i in range(1,len(numbers_list)+1):
        for j in permutations(numbers_list,i):
            #0이 있으므로 int로 형변환
            temp_list.append(int(''.join(j)))
    temp_list = list(set(temp_list))
    for k in temp_list:
        if(isPrime(int(k))):
            answer += 1
    return answer